{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_LOGOUT, USER_LOGIN_SUCCESS, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\"; //Esta función hace el login, se está llamando en Login.js\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //Esta función hace logout, se está llamando en Perfil.js\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGIN_LOGOUT\n  });\n}; //Esta función regista un usuario en mongodb, es llamada en AgregarUsuario.js\n\nexport const register = (name, email, password, rol, salario, restaurante, estado) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password,\n      rol,\n      salario,\n      restaurante,\n      estado\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_LOGOUT","USER_LOGIN_SUCCESS","USER_REGISTER_SUCCESS","axios","login","email","password","dispatch","config","headers","data","post","type","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","rol","salario","restaurante","estado","USER_REGISTER_FAIL"],"sources":["C:/Users/Manuel/Documents/proyectoWebV2/webII-ULACIT/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_LOGOUT,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_REGISTER_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\n//Esta función hace el login, se está llamando en Login.js\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        const config = { headers: { \"Content-type\": \"application/json\" } };\r\n        const { data } = await axios.post('/api/users/login', { email, password, }, config);\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//Esta función hace logout, se está llamando en Perfil.js\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGIN_LOGOUT })\r\n};\r\n\r\n//Esta función regista un usuario en mongodb, es llamada en AgregarUsuario.js\r\nexport const register = (name, email, password, rol, salario, restaurante, estado) => async (dispatch) => {\r\n    try {\r\n        const config = { headers: { \"Content-type\": \"application/json\" } };\r\n        const { data } = await axios.post(\r\n            \"/api/users\",\r\n            { name, email, password, rol, salario, restaurante, estado },\r\n            config);\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};"],"mappings":"AAAA,SACIA,eADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,EAIIC,qBAJJ,QAKO,4BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC1D,IAAI;IACA,MAAMC,MAAM,GAAG;MAAEC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAAX,CAAf;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMP,KAAK,CAACQ,IAAN,CAAW,kBAAX,EAA+B;MAAEN,KAAF;MAASC;IAAT,CAA/B,EAAqDE,MAArD,CAAvB;IACAD,QAAQ,CAAC;MAAEK,IAAI,EAAEX,kBAAR;MAA4BY,OAAO,EAAEH;IAArC,CAAD,CAAR;IACAI,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;EACH,CALD,CAKE,OAAOQ,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLK,IAAI,EAAEb,eADD;MAELc,OAAO,EACHK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAD1B,GAEMF,KAAK,CAACE;IALX,CAAD,CAAR;EAOH;AACJ,CAfM,C,CAiBP;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOd,QAAP,IAAoB;EAC5CO,YAAY,CAACQ,UAAb,CAAwB,UAAxB;EACAf,QAAQ,CAAC;IAAEK,IAAI,EAAEZ;EAAR,CAAD,CAAR;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMuB,QAAQ,GAAG,CAACC,IAAD,EAAOnB,KAAP,EAAcC,QAAd,EAAwBmB,GAAxB,EAA6BC,OAA7B,EAAsCC,WAAtC,EAAmDC,MAAnD,KAA8D,MAAOrB,QAAP,IAAoB;EACtG,IAAI;IACA,MAAMC,MAAM,GAAG;MAAEC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAAX,CAAf;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMP,KAAK,CAACQ,IAAN,CACnB,YADmB,EAEnB;MAAEa,IAAF;MAAQnB,KAAR;MAAeC,QAAf;MAAyBmB,GAAzB;MAA8BC,OAA9B;MAAuCC,WAAvC;MAAoDC;IAApD,CAFmB,EAGnBpB,MAHmB,CAAvB;IAKAD,QAAQ,CAAC;MAAEK,IAAI,EAAEV,qBAAR;MAA+BW,OAAO,EAAEH;IAAxC,CAAD,CAAR;IACAH,QAAQ,CAAC;MAAEK,IAAI,EAAEX,kBAAR;MAA4BY,OAAO,EAAEH;IAArC,CAAD,CAAR;IACAI,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;EACH,CAVD,CAUE,OAAOQ,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLK,IAAI,EAAEiB,kBADD;MAELhB,OAAO,EACHK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAD1B,GAEMF,KAAK,CAACE;IALX,CAAD,CAAR;EAOH;AACJ,CApBM"},"metadata":{},"sourceType":"module"}