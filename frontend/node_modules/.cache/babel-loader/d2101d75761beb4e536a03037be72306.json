{"ast":null,"code":"import { RESTAURANTE_LIST_SUCCESS, RESTAURANTE_LIST_FAIL } from \"../constants/restauranteConstants\";\nimport axios from \"axios\";\nexport const listaRestaurantes = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/notes`);\n    dispatch({\n      type: RESTAURANTE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: RESTAURANTE_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["RESTAURANTE_LIST_SUCCESS","RESTAURANTE_LIST_FAIL","axios","listaRestaurantes","dispatch","data","get","type","payload","error","message","response"],"sources":["C:/Users/Manuel/Documents/proyectoWebV2/webII-ULACIT/frontend/src/actions/restaurantesActions.js"],"sourcesContent":["import {\r\n    RESTAURANTE_LIST_SUCCESS,\r\n    RESTAURANTE_LIST_FAIL,\r\n} from \"../constants/restauranteConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listaRestaurantes = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/notes`);\r\n\r\n        dispatch({ type: RESTAURANTE_LIST_SUCCESS, payload: data });\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: RESTAURANTE_LIST_FAIL, payload: message });\r\n    }\r\n};"],"mappings":"AAAA,SACIA,wBADJ,EAEIC,qBAFJ,QAGO,mCAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACvD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,YAAX,CAAvB;IAEAF,QAAQ,CAAC;MAAEG,IAAI,EAAEP,wBAAR;MAAkCQ,OAAO,EAAEH;IAA3C,CAAD,CAAR;EAEH,CALD,CAKE,OAAOI,KAAP,EAAc;IACZ,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OAAtC,GAAgDD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBK,OAApE,GAA8ED,KAAK,CAACC,OAApG;IACAN,QAAQ,CAAC;MAAEG,IAAI,EAAEN,qBAAR;MAA+BO,OAAO,EAAEE;IAAxC,CAAD,CAAR;EACH;AACJ,CAVM"},"metadata":{},"sourceType":"module"}